// <auto-generated />
using System;
using DuckyTalk.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DuckyTalk.Migrations
{
    [DbContext(typeof(DuckyTalkContext))]
    [Migration("20220513145705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DuckyTalk.Database.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "Rock music",
                            Name = "Music"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "Comedy",
                            Name = "Movies"
                        });
                });

            modelBuilder.Entity("DuckyTalk.Database.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DuckyTalk.Database.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            Description = "",
                            IsDeleted = false,
                            Name = "NaN"
                        },
                        new
                        {
                            TechnologyId = 2,
                            Description = "SQL is a standard language for accessing and manipulating databases.",
                            IsDeleted = false,
                            Name = "SQL"
                        },
                        new
                        {
                            TechnologyId = 3,
                            Description = "Java is an object-oriented programming language that produces software for multiple platforms.",
                            IsDeleted = false,
                            Name = "Java"
                        });
                });

            modelBuilder.Entity("DuckyTalk.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateTime(1998, 11, 4, 14, 28, 58, 693, DateTimeKind.Local),
                            Email = "anisa.mehremic@edu.fit.ba",
                            FirstName = "Anisa",
                            LastName = "Mehremic",
                            PasswordHash = "+WQk9mVupe+VOTeMI1a8PsyMmR0=",
                            PasswordSalt = "cPYUsauMRpahKHypOM3BIA==",
                            Username = "anisam"
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateTime(1998, 12, 21, 11, 55, 58, 693, DateTimeKind.Local),
                            Email = "lejla.mujakic@edu.fit.ba",
                            FirstName = "Lejla",
                            LastName = "Mujakic",
                            PasswordHash = "+WQk9mVupe+VOTeMI1a8PsyMmR0=",
                            PasswordSalt = "cPYUsauMRpahKHypOM3BIA==",
                            Username = "lejlam"
                        });
                });

            modelBuilder.Entity("DuckyTalk.Database.UserBreakReminder", b =>
                {
                    b.Property<int>("UserBreakReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserBreakReminderId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBreakReminder");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserInterest", b =>
                {
                    b.Property<int>("UserInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInterest");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserMessage", b =>
                {
                    b.Property<int>("UserMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserMessageId");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMessage");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserTechnology", b =>
                {
                    b.Property<int>("UserTechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserTechnologyId");

                    b.HasIndex("TechnologyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTechnologies");

                    b.HasData(
                        new
                        {
                            UserTechnologyId = 1,
                            IsDeleted = false,
                            TechnologyId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserTechnologyId = 2,
                            IsDeleted = false,
                            TechnologyId = 1,
                            UserId = 2
                        },
                        new
                        {
                            UserTechnologyId = 3,
                            IsDeleted = false,
                            TechnologyId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DuckyTalk.Database.Message", b =>
                {
                    b.HasOne("DuckyTalk.Database.Technology", "Technology")
                        .WithMany("Messages")
                        .HasForeignKey("TechnologyId")
                        .HasConstraintName("FK__Messages__Techno__2B3F6F97")
                        .IsRequired();

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserBreakReminder", b =>
                {
                    b.HasOne("DuckyTalk.Database.User", "User")
                        .WithMany("UserBreakReminders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserBreak__UserI__3C69FB99")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserInterest", b =>
                {
                    b.HasOne("DuckyTalk.Database.Interest", "Interest")
                        .WithMany("UserInterests")
                        .HasForeignKey("InterestId")
                        .HasConstraintName("FK__UserInter__Inter__33D4B598")
                        .IsRequired();

                    b.HasOne("DuckyTalk.Database.User", "User")
                        .WithMany("UserInterests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserInter__UserI__32E0915F")
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserMessage", b =>
                {
                    b.HasOne("DuckyTalk.Database.Message", "Message")
                        .WithMany("UserMessages")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK__UserMessa__Messa__38996AB5")
                        .IsRequired();

                    b.HasOne("DuckyTalk.Database.User", "User")
                        .WithMany("UserMessages")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserMessa__UserI__37A5467C")
                        .IsRequired();

                    b.Navigation("Message");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuckyTalk.Database.UserTechnology", b =>
                {
                    b.HasOne("DuckyTalk.Database.Technology", "Technology")
                        .WithMany("UserTechnologies")
                        .HasForeignKey("TechnologyId")
                        .HasConstraintName("FK__UserTechn__Techn__2F10007B")
                        .IsRequired();

                    b.HasOne("DuckyTalk.Database.User", "User")
                        .WithMany("UserTechnologies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserTechn__UserI__2E1BDC42")
                        .IsRequired();

                    b.Navigation("Technology");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DuckyTalk.Database.Interest", b =>
                {
                    b.Navigation("UserInterests");
                });

            modelBuilder.Entity("DuckyTalk.Database.Message", b =>
                {
                    b.Navigation("UserMessages");
                });

            modelBuilder.Entity("DuckyTalk.Database.Technology", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserTechnologies");
                });

            modelBuilder.Entity("DuckyTalk.Database.User", b =>
                {
                    b.Navigation("UserBreakReminders");

                    b.Navigation("UserInterests");

                    b.Navigation("UserMessages");

                    b.Navigation("UserTechnologies");
                });
#pragma warning restore 612, 618
        }
    }
}
